name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Authenticate Docker to GCR
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: docker build --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} --build-arg DEBUG=${{ secrets.DEBUG }} --build-arg API_KEY=${{ secrets.API_KEY }} --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/kaloforge:${{ github.sha }} .
    - name: Push Docker image to GCR
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/kaloforge:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy kaloforge \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/kaloforge:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --update-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
          --update-env-vars "SECRET_KEY=${{ secrets.SECRET_KEY }}" \
          --update-env-vars "DEBUG=${{ secrets.DEBUG }}" \
          --update-env-vars "API_KEY=${{ secrets.API_KEY }}" \
          --update-env-vars "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          --update-env-vars "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"